openapi: 3.0.3
info:
  title: Control API
  version: 1.0.0
  description: |-
    API for starting and joining PTY sessions. Currently also hosting all non-proxy related endpoints.
servers:
  - url: https://x01smxtra1a.sp.uat.dbs.corp:55007
    description: UAT
  - url: http://localhost:55007
    description: Local


tags:
  - name: PTY Token
    description: Get tokens for starting and joining PTY sessions
  - name: Make Change
    description: Retrieve Change Requests, their hosts and associated PTY sessions (for user's implementor group, currently not filtered)
  - name: IExpress
    description: Retrieve IExpress tickets, their hosts and associated PTY sessions
  - name: Healthcheck
    description: Retrieve healthcheck servers and associated PTY sessions (for user's OU Group, currently not filtered)
  - name: Whitelist / Blacklist
    description: Manage whitelists and blacklists for Healthcheck OU Group
  - name: Session Logs
    description: Retrieve session logs for PTY sessions and connections
  - name: Admin
    description: Administrative endpoints for managing PTY sessions and connections

paths:
  ######################################################################## Session Logs Use Case
#  /api/v1/session_logs/{pty_session_id}:
#    get:
#      tags:
#        - Session Logs
#      summary: Get logs for a specific PTY session
#      security:
#        - BearerAuth: [ ]
#      parameters:
#        - name: pty_session_id
#          in: path
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: PTY session logs retrieved successfully
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  type: string
#        '404':
#          description: PTY session not found
#        '500':
#          description: Internal server error


  ######################################################################## Pty Token Use Case

  /api/v1/pty_token/start:
    post:
      tags:
        - PTY Token
      summary: Mint a start token for a new PTY session
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRequest'
      responses:
        '200':
          description: Authorization token and proxy load balancer URL to connect to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '4XX':
          description: Invalid request
        '5XX':
          description: Server error

  /api/v1/pty_token/join:
    post:
      tags:
        - PTY Token
      summary: Mint a join token for an existing PTY session
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
      responses:
        '200':
          description: Authorization token and proxy load balancer URL to connect to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '4XX':
          description: Invalid request
        '5XX':
          description: Server error

######################################################################## Make change Use Case

  /api/v1/change_requests/:
    get:
      tags:
        - Make Change
      summary: Get change request and associated PTY sessions
      description: Returns all APPROVED Change Requests associated with the user's implementor group and associated 
        PTY sessions and connections
        Implementor group is retrieved from the user's id provided by the authentication token.
      security:
          - BearerAuth: [ ]
      parameters:
          - name: ticket_ids
            in: query
            required: false
            schema: { type: array, items: { type: string } }
          - name: implementor_groups
            in: query
            required: false
            schema: { type: array, items: { type: string } }
          - name: lob
            in: query
            required: false
            schema: { type: string }
          - name: country
            in: query
            required: false
            schema: { type: string }
          - name: start_time
            in: query
            required: false
            description: Expected format - RFC3339
            schema: { type: string, format: date-time }
          - name: end_time
            in: query
            required: false
            description: Expected format - RFC3339
            schema: { type: string, format: date-time }
          - name: pty_session_state
            in: query
            required: false
            description: Does not filter out CRs, field not for users
            schema:
              $ref: '#/components/schemas/PtySessionState'
          - name: page
            in: query
            schema: { type: integer, minimum: 1, default: 1 }
          - name: page_size
            in: query
            schema: { type: integer, minimum: 1, maximum: 1000, default: 20 }
          - name: total_count
            in: query
            schema: { type: boolean, default: false }
      responses:
          '200':
            description: List change request details and their associated PTY sessions
            content:
              application/json:
                schema:
                  properties:
                    total_count:
                        description: total number of change requests matching the filter
                        type: integer
                  type: array
                  items:
                    $ref: '#/components/schemas/ChangeRequestSessionsResponse'
                example:
                  note: its outdated
                  change_id: CR20250721001
                  country: ["SG", "HK"]
                  lob: "CES"
                  implementor_groups: ["DSSS", "DSSS-DB"]
                  change_start_time: "2025-07-20 23:00:00"
                  change_end_time: "2025-07-20 23:00:00"
                  change_request_status: "Active"
                  summary: "Upgrade of backend systems"
                  host_session_details:
                    - host:
                        name: app-server-1
                        ip_address: 10.0.1.10
                        environment: prod
                        app_code: JUMP
                      os_users:
                        - ec2-user
                        - invs
                      pty_sessions:
                        - id: 15263cb6-2483-4369-9bcb-89f64b03e5f01753109108
                          created_by: kei
                          start_time: "2025-07-21 22:45:08.308"
                          end_time: "2025-07-22 00:45:12.381"
                          last_activity: "2025-07-22 00:45:12.381"
                          change_id: CR20250721001
                          purpose: change_request
                          state: active
                          connections:
                            - id: kei/9348e6cd-2b1d-49b2-9ae7-03a6a279bc79
                              user_id: kei
                              pty_session_id: 15263cb6-2483-4369-9bcb-89f64b03e5f01753109108
                              start_role: implementor
                              status: active
                              join_time: "2025-07-21 22:45:08.325"
                              leave_time: "2025-07-21 22:46:48.383"
          '404':
            description: Not found
          '500':
            description: Internal server error

  ######################################################################## Healthcheck Use Case

  /api/v1/healthcheck/:
    get:
      tags:
        - Healthcheck
      summary: Get healthcheck servers for user's OU group and associated PTY sessions
      description: Returns healthcheck servers associated with the user's OU group and their associated
        PTY sessions and connections
        OU group is retrieved from the user's id provided by the authentication token.
      security:
        - BearerAuth: [ ]
      parameters:
        - name: hostname
          in: query
          required: false
          schema: { type: string }
        - name: ip
          in: query
          required: false
          schema: { type: string }
        - name: appcode
          in: query
          required: false
          schema: { type: string }
        - name: lob
          in: query
          required: false
          schema: { type: string }
        - name: os_type
          in: query
          required: false
          schema: { type: string }
        - name: status
          in: query
          required: false
          schema: { type: string }
        - name: environment
          in: query
          required: false
          schema: { type: string }
        - name: country
          in: query
          required: false
          schema: { type: string }
        - name: system_type
          in: query
          required: false
          schema: { type: string }
        - name: pty_session_state
          in: query
          required: false
          description: Does not filter out hosts, field not meant for users
          schema:
            $ref: '#/components/schemas/PtySessionState'
        - name: page
          in: query
          schema: { type: integer, minimum: 1, default: 1 }
        - name: page_size
          in: query
          schema: { type: integer, minimum: 1, maximum: 1000, default: 20 }
      responses:
        '200':
          description: List healthcheck host details and their associated PTY sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthcheckSessionsResponse'
                example:
                    host_session_details:
                        - host:
                            name: healthcheck-server-1
                            ip_address: 54.255.144.215
                            environment: Production
                            app_code: ABC
                            country: SG
                            os_users:
                                - ec2-user
                                - admin
                                - healthcheck
                            pty_sessions:
                              - id: 15263cb6-2483-4369-9bcb-89f64b03e5f01753109108
                                created_by: kei
                                start_time: "2025-07-21 22:45:08.308"
                                end_time: "2025-07-22 00:45:12.381"
                                last_activity: "2025-07-22 00:45:12.381"
                                purpose: healthcheck
                                state: active
                                connections:
                                  - id: kei/9348e6cd-2b1d-49b2-9ae7-03a6a279bc79
                                    user_id: kei
                                    pty_session_id: 15263cb6-2483-4369-9bcb-89f64b03e5f01753109108
                                    start_role: implementor
                                    status: active
                                    join_time: "2025-07-21 22:45:08.325"
                                    leave_time: "2025-07-21 22:46:48.383"
  ######################################################################## Make change Use Case
  ## todo make cursoor pagination

  /api/v1/iexpress/:
    get:
      tags:
        - IExpress
      summary: Get Approved IExpress tickets and associated PTY sessions
      description: Returns all APPROVED IExpress Tickets for the user's implementor groups (implementor group is compared to the
       approver groups and md approver group in the ticket)
      security:
        - BearerAuth: [ ]
      parameters:
        - name: request_ids
          in: query
          required: false
          schema: { type: array, items: { type: string } }
        - name: requestor
          in: query
          required: false
          schema: { type: string }
        - name: lob
          in: query
          required: false
          schema: { type: string }
        - name: origin_country
          in: query
          required: false
          schema: { type: string }
        - name: app_impacted
          in: query
          required: false
          schema: { type: array, items: { type: string } }
        - name: start_time
          in: query
          required: false
          description: Expected format - RFC3339
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          required: false
          description: Expected format - RFC3339
          schema: { type: string, format: date-time }
        - name: page
          in: query
          schema: { type: integer, minimum: 1, default: 1 }
        - name: page_size
          in: query
          schema: { type: integer, minimum: 1, maximum: 1000, default: 20 }
        - name: total_count
          in: query
          schema: { type: boolean, default: false }
      responses:
        '200':
          description: List iexpress details
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetIExpressResponse'
        '404':
          description: Not found
        '500':
          description: Internal server error

  /api/v1/iexpress/{request_id}:
    get:
      tags:
        - IExpress
      summary: Get details of a specific IExpress ticket
      security:
        - BearerAuth: [ ]
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: IExpress ticket details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIExpressHostsAndSessionDetailsResponse'
        '404':
          description: IExpress ticket not found
        '500':
          description: Internal server error

######################################################################### Whitelist / Blacklist Use Case
  /api/v1/whitelist/regex:
    get:
      tags:
        - Whitelist / Blacklist
      summary: Get all whitelist regex filters for healthcheck ou group
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: List of whitelist regex filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegexFilter'
        '500':
          description: Internal server error

    post:
      tags:
        - Whitelist / Blacklist
      summary: Add a regex to whitelist for healthcheck ou group
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - pattern
              properties:
                pattern:
                  type: string
                  description: The regular expression pattern
      responses:
        '201':
          description: Filter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexFilter'
        '400':
          description: Invalid input (e.g., malformed regex)
        '500':
          description: Internal server error

  /api/v1/whitelist/regex/{id}:
    put:
      tags:
        - Whitelist / Blacklist
      summary: Update a whitelist regex filter
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pattern
              properties:
                pattern:
                  type: string
                  description: Updated regular expression pattern
                isEnabled:
                  type: boolean
      responses:
        '200':
          description: Filter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexFilter'
        '400':
          description: Invalid input
        '404':
          description: Filter not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Whitelist / Blacklist
      summary: Soft delete a whitelist regex filter
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Filter deleted successfully
        '404':
          description: Filter not found
        '500':
          description: Internal server error

  /api/v1/blacklist/regex:
    get:
      tags:
        - Whitelist / Blacklist
      summary: Get all blacklist regex filters for healthcheck ou group
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: List of blacklist regex filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegexFilter'
        '500':
          description: Internal server error

    post:
      tags:
        - Whitelist / Blacklist
      summary: Add a regex to blacklist for healthcheck ou group
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pattern
              properties:
                pattern:
                  type: string
                  description: The regular expression pattern
      responses:
        '201':
          description: Filter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexFilter'
        '400':
          description: Invalid input (e.g., malformed regex)
        '500':
          description: Internal server error

  /api/v1/blacklist/regex/{id}:
    put:
      tags:
        - Whitelist / Blacklist
      summary: Update a blacklist regex filter
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pattern
              properties:
                pattern:
                  type: string
                  description: Updated regular expression pattern
                isEnabled:
                  type: boolean
      responses:
        '200':
          description: Filter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexFilter'
        '400':
          description: Invalid input
        '404':
          description: Filter not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Whitelist / Blacklist
      summary: Soft delete a blacklist regex filter
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Filter deleted successfully
        '404':
          description: Filter not found
        '500':
          description: Internal server error

#  ######################################################################## PTY Session Filter
#
#  /api/v1/pty_sessions:
#    get:
#      tags:
#        - PTY Session
#      summary: Search and filter PTY sessions
#      security:
#        - BearerAuth: []
#      parameters:
#        - name: user_id
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: state
#          in: query
#          required: false
#          schema:
#            type: string
#            enum: [active, ended]
#        - name: proxy_id
#          in: query
#          required: false
#          schema:
#            type: string
#        - name: start_time_from
#          in: query
#          required: false
#          schema:
#            type: string
#            format: date-time
#        - name: start_time_to
#          in: query
#          required: false
#          schema:
#            type: string
#            format: date-time
#        - name: sort_field
#          in: query
#          required: false
#          schema:
#            type: string
#            enum: [start_time, end_time, last_activity]
#        - name: sort_order
#          in: query
#          required: false
#          schema:
#            type: string
#            enum: [asc, desc]
#        - name: page
#          in: query
#          required: false
#          schema:
#            type: integer
#            minimum: 1
#            default: 1
#        - name: page_size
#          in: query
#          required: false
#          schema:
#            type: integer
#            minimum: 1
#            maximum: 100
#            default: 20
#      responses:
#        '200':
#          description: Filtered PTY sessions
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/PtySessionSearchResponse'
#        '400':
#          description: Bad filter parameters
#        '500':
#          description: Internal server error

######################################################################## Components
######################################################################## Components
######################################################################## Components
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ######################################################################## Enums
    ConnectionPurpose:
      type: string
      description: Type of connection being established
      enum: [change_request, health_check]

    StartRole:
      type: string
      description: Start role for joining existing PTY sessions
      enum: [implementor, observer]

    ConnectionStatus:
      type: string
      description: Status of the connection
      enum: [ active, closed ]

    PtySessionState:
      type: string
      description: State of the PTY session
      enum: [created, active, closed]

    ######################################################################## Full DTO Schemas
    Host:
      type: object
      required: [ name, ip_address, environment, app_code ]
      properties:
        name:
          type: string
        ip_address:
          type: string
        environment:
          type: string
        app_code:
          type: string
        country:
            type: string

    OsUsers:
      type: array
      items:
        type: string

    ServerInfo:
      type: object
      description: Info about the target server for the PTY session
      properties:
        os_user:
          type: string
          description: The Os user to connect as
        server_ip:
          type: string
          description: IP address of the target server
      required: [os_user, server_ip]

    ProxyLoadBalancer:
      type: object
      description: Load balancer information for the proxy group
      properties:
        id:
          type: string
          description: Unique identifier for the load balancer
        url:
          type: string
          description: URL of the load balancer (e.g., `https://proxy.os.com`)
      required: [id, url]

    Connection:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        pty_session_id:
          type: string
        start_role:
          $ref: '#/components/schemas/StartRole'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        join_time:
          type: string
          format: date-time
        leave_time:
          type: string
          format: date-time

    ######################################################################## PTY Session Schemas

    PtySession:
      type: object
      properties:
        id:
          type: string
        created_by:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/PtySessionState'
        last_activity:
          type: string
          format: date-time
# todo add all proxy and start conn details
        purpose:
          $ref: '#/components/schemas/ConnectionPurpose'
        change_id:
          type: string
          description: ID of the change request associated with this PTY session, if applicable
        connections:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: List of connections to this PTY session's life time

    PtySessionSummary:
      allOf:
        - $ref: '#/components/schemas/PtySession'
        - type: object
          properties:
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            last_activity:
              type: string
              format: date-time
            change_id:
              type: string
          required: [id, created_by, state, purpose, connections]

    ######################################################################## PTY Token Use Case
    StartRequest:
      type: object
      properties:
        purpose:
          $ref: '#/components/schemas/ConnectionPurpose'
        change_id:
          type: string
          description: Only required if purpose is "change_request", ID of the change request to connect to
        server:
          $ref: '#/components/schemas/ServerInfo'
      required: [ purpose, server ]
      example:
        purpose: change_request
        change_id: CR202512314
        server:
          os_user: ec2-user
          server_ip: 10.0.0.1

    JoinRequest:
      type: object
      properties:
        pty_session_id:
          type: string
          description: ID of the existing PTY session to join, user will be validated against this session's initial
            connection details
        start_role:
          $ref: '#/components/schemas/StartRole'
      required: [ pty_session_id, start_role ]
      example:
        pty_session_id: PTY202512314
        start_role: implementor

    TokenResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token for proxy
        proxyUrl:
          type: string
          description: Load balancer URL for proxy group (e.g., `https://proxy.os.com`, `https://proxy.db.com`)
      required: [ token, proxyUrl ]
      example:
        token: eyJhbGciO
        proxyUrl: https://proxy.os.com

    ######################################################################## Make change use case
    
    
    ChangeRequestSessionsResponse:
      type: object
      properties:
        change_id:
          type: string
        country:
          type: array
          items:
              type: string
        lob:
          type: string
        implementor_groups:
          type: array
          items:
              type: string
        change_start_time:
          type: string
          format: date-time
        change_end_time:
          type: string
          format: date-time
        change_request_status:
          type: string
        summary:
          type: string
        host_session_details:
          type: array
          items:
            $ref: '#/components/schemas/HostSessionDetailsV2'

    HostSessionDetails:
      type: object
      properties:
        host:
           $ref: '#/components/schemas/Host'
        os_users:
          type: array
          items:
            type: string
        pty_sessions:
          type: array
          items:
            $ref: '#/components/schemas/PtySessionSummary'

    HostSessionDetailsV2:
      type: object
      properties:
        host:
          $ref: '#/components/schemas/Host'
        cyberark_objects:
          type: array
          items:
            type: string
        os_users:
          type: array
          items:
            type: string
        pty_sessions:
          type: array
          items:
            $ref: '#/components/schemas/PtySessionSummary'
    ######################################################################## Healthcheck use case

    HealthcheckSessionsResponse:
      type: object
      properties:
        host_session_details:
          type: array
          items:
            $ref: '#/components/schemas/HostSessionDetails'
    ######################################################################## Iexpress use case

    IExpress:
      type: object
      required:
        - request_id
        - requestor
        - state
        - lob
        - origin_country
        - app_impacted
        - start_time
        - end_time
      properties:
        request_id:
          type: string
        requestor:
          type: string
        lob:
          type: string
        origin_country:
          type: string
        app_impacted:
          type: array
          items:
            type: string
        action:
          type: string
        related_ticket:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        state:
          type: string
        approver_group1:
          type: string
        approver_group2:
          type: string
        md_approver_group:
          type: string

    GetIExpressResponse:
      type: object
      properties:
        total_count:
          description: total number of iexpress requests matching the filter
          type: integer
        page:
          type: integer
        page_size:
          type: integer
        items:
            type: array
            items:
              $ref: '#/components/schemas/IExpress'

    GetIExpressHostsAndSessionDetailsResponse:
      type: object
      properties:
        host_session_details:
          type: array
          items:
            $ref: '#/components/schemas/HostSessionDetailsV2'

    ######################################################################## Whitelist / blacklist use case

    RegexFilter:
      type: object
      properties:
        id:
          type: integer
        pattern:
          type: string
        ou_group:
          type: string
        filter_type:
          type: string
          enum: [WHITELIST, BLACKLIST]
        is_enabled:
          type: boolean
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
        deleted_by:
          type: string
        deleted_at:
            type: string
            format: date-time
        updated_by:
          type: string
        updated_at:
            type: string
            format: date-time